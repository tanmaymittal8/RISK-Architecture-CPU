vendor_name = ModelSim
source_file = 1, C:/Users/Mechi/Desktop/ece 385 uiuc/lab4/HexDriver.sv
source_file = 1, C:/Users/Mechi/Desktop/ece 385 uiuc/lab4/full_adder.sv
source_file = 1, C:/Users/Mechi/Desktop/ece 385 uiuc/lab4/control.sv
source_file = 1, C:/Users/Mechi/Desktop/ece 385 uiuc/lab4/mux2_1_17.sv
source_file = 1, C:/Users/Mechi/Desktop/ece 385 uiuc/lab4/reg_17.sv
source_file = 1, C:/Users/Mechi/Desktop/ece 385 uiuc/lab4/addition_unit.sv
source_file = 1, C:/Users/Mechi/Desktop/ece 385 uiuc/lab4/multiply.sv
source_file = 1, C:/Users/Mechi/Desktop/ece 385 uiuc/lab4/reg_8.sv
source_file = 1, C:/Users/Mechi/Desktop/ece 385 uiuc/lab4/Synchronizers.sv
source_file = 1, C:/Users/Mechi/Desktop/ece 385 uiuc/lab4/testbench.sv
source_file = 1, C:/Users/Mechi/Desktop/ece 385 uiuc/lab4/db/multiply.cbx.xml
design_name = multiply
instance = comp, \~QUARTUS_CREATED_GND~I , ~QUARTUS_CREATED_GND~I, multiply, 1
instance = comp, \HEX0[0]~output , HEX0[0]~output, multiply, 1
instance = comp, \HEX0[1]~output , HEX0[1]~output, multiply, 1
instance = comp, \HEX0[2]~output , HEX0[2]~output, multiply, 1
instance = comp, \HEX0[3]~output , HEX0[3]~output, multiply, 1
instance = comp, \HEX0[4]~output , HEX0[4]~output, multiply, 1
instance = comp, \HEX0[5]~output , HEX0[5]~output, multiply, 1
instance = comp, \HEX0[6]~output , HEX0[6]~output, multiply, 1
instance = comp, \HEX1[0]~output , HEX1[0]~output, multiply, 1
instance = comp, \HEX1[1]~output , HEX1[1]~output, multiply, 1
instance = comp, \HEX1[2]~output , HEX1[2]~output, multiply, 1
instance = comp, \HEX1[3]~output , HEX1[3]~output, multiply, 1
instance = comp, \HEX1[4]~output , HEX1[4]~output, multiply, 1
instance = comp, \HEX1[5]~output , HEX1[5]~output, multiply, 1
instance = comp, \HEX1[6]~output , HEX1[6]~output, multiply, 1
instance = comp, \HEX2[0]~output , HEX2[0]~output, multiply, 1
instance = comp, \HEX2[1]~output , HEX2[1]~output, multiply, 1
instance = comp, \HEX2[2]~output , HEX2[2]~output, multiply, 1
instance = comp, \HEX2[3]~output , HEX2[3]~output, multiply, 1
instance = comp, \HEX2[4]~output , HEX2[4]~output, multiply, 1
instance = comp, \HEX2[5]~output , HEX2[5]~output, multiply, 1
instance = comp, \HEX2[6]~output , HEX2[6]~output, multiply, 1
instance = comp, \HEX3[0]~output , HEX3[0]~output, multiply, 1
instance = comp, \HEX3[1]~output , HEX3[1]~output, multiply, 1
instance = comp, \HEX3[2]~output , HEX3[2]~output, multiply, 1
instance = comp, \HEX3[3]~output , HEX3[3]~output, multiply, 1
instance = comp, \HEX3[4]~output , HEX3[4]~output, multiply, 1
instance = comp, \HEX3[5]~output , HEX3[5]~output, multiply, 1
instance = comp, \HEX3[6]~output , HEX3[6]~output, multiply, 1
instance = comp, \Aval[0]~output , Aval[0]~output, multiply, 1
instance = comp, \Aval[1]~output , Aval[1]~output, multiply, 1
instance = comp, \Aval[2]~output , Aval[2]~output, multiply, 1
instance = comp, \Aval[3]~output , Aval[3]~output, multiply, 1
instance = comp, \Aval[4]~output , Aval[4]~output, multiply, 1
instance = comp, \Aval[5]~output , Aval[5]~output, multiply, 1
instance = comp, \Aval[6]~output , Aval[6]~output, multiply, 1
instance = comp, \Aval[7]~output , Aval[7]~output, multiply, 1
instance = comp, \Bval[0]~output , Bval[0]~output, multiply, 1
instance = comp, \Bval[1]~output , Bval[1]~output, multiply, 1
instance = comp, \Bval[2]~output , Bval[2]~output, multiply, 1
instance = comp, \Bval[3]~output , Bval[3]~output, multiply, 1
instance = comp, \Bval[4]~output , Bval[4]~output, multiply, 1
instance = comp, \Bval[5]~output , Bval[5]~output, multiply, 1
instance = comp, \Bval[6]~output , Bval[6]~output, multiply, 1
instance = comp, \Bval[7]~output , Bval[7]~output, multiply, 1
instance = comp, \LED[0]~output , LED[0]~output, multiply, 1
instance = comp, \LED[1]~output , LED[1]~output, multiply, 1
instance = comp, \LED[2]~output , LED[2]~output, multiply, 1
instance = comp, \LED[3]~output , LED[3]~output, multiply, 1
instance = comp, \LED[4]~output , LED[4]~output, multiply, 1
instance = comp, \LED[5]~output , LED[5]~output, multiply, 1
instance = comp, \LED[6]~output , LED[6]~output, multiply, 1
instance = comp, \LED[7]~output , LED[7]~output, multiply, 1
instance = comp, \Xval~output , Xval~output, multiply, 1
instance = comp, \SW[0]~input , SW[0]~input, multiply, 1
instance = comp, \SW[3]~input , SW[3]~input, multiply, 1
instance = comp, \SW[2]~input , SW[2]~input, multiply, 1
instance = comp, \SW[1]~input , SW[1]~input, multiply, 1
instance = comp, \HexBL|WideOr6~0 , HexBL|WideOr6~0, multiply, 1
instance = comp, \HexBL|WideOr5~0 , HexBL|WideOr5~0, multiply, 1
instance = comp, \HexBL|WideOr4~0 , HexBL|WideOr4~0, multiply, 1
instance = comp, \HexBL|WideOr3~0 , HexBL|WideOr3~0, multiply, 1
instance = comp, \HexBL|WideOr2~0 , HexBL|WideOr2~0, multiply, 1
instance = comp, \HexBL|WideOr1~0 , HexBL|WideOr1~0, multiply, 1
instance = comp, \HexBL|WideOr0~0 , HexBL|WideOr0~0, multiply, 1
instance = comp, \SW[5]~input , SW[5]~input, multiply, 1
instance = comp, \SW[7]~input , SW[7]~input, multiply, 1
instance = comp, \SW[6]~input , SW[6]~input, multiply, 1
instance = comp, \SW[4]~input , SW[4]~input, multiply, 1
instance = comp, \HexBU|WideOr6~0 , HexBU|WideOr6~0, multiply, 1
instance = comp, \HexBU|WideOr5~0 , HexBU|WideOr5~0, multiply, 1
instance = comp, \HexBU|WideOr4~0 , HexBU|WideOr4~0, multiply, 1
instance = comp, \HexBU|WideOr3~0 , HexBU|WideOr3~0, multiply, 1
instance = comp, \HexBU|WideOr2~0 , HexBU|WideOr2~0, multiply, 1
instance = comp, \HexBU|WideOr1~0 , HexBU|WideOr1~0, multiply, 1
instance = comp, \HexBU|WideOr0~0 , HexBU|WideOr0~0, multiply, 1
instance = comp, \Clk~input , Clk~input, multiply, 1
instance = comp, \Clk~inputclkctrl , Clk~inputclkctrl, multiply, 1
instance = comp, \Reset_Load_Clear~input , Reset_Load_Clear~input, multiply, 1
instance = comp, \Run~input , Run~input, multiply, 1
instance = comp, \B_reg|Data_Next~7 , B_reg|Data_Next~7, multiply, 1
instance = comp, \control_unit|WideOr11~1 , control_unit|WideOr11~1, multiply, 1
instance = comp, \control_unit|WideOr11~0 , control_unit|WideOr11~0, multiply, 1
instance = comp, \B_reg|Data_Out[1]~0 , B_reg|Data_Out[1]~0, multiply, 1
instance = comp, \B_reg|Data_Out[7] , B_reg|Data_Out[7], multiply, 1
instance = comp, \B_reg|Data_Next~6 , B_reg|Data_Next~6, multiply, 1
instance = comp, \B_reg|Data_Out[6] , B_reg|Data_Out[6], multiply, 1
instance = comp, \B_reg|Data_Next~5 , B_reg|Data_Next~5, multiply, 1
instance = comp, \B_reg|Data_Out[5] , B_reg|Data_Out[5], multiply, 1
instance = comp, \B_reg|Data_Next~4 , B_reg|Data_Next~4, multiply, 1
instance = comp, \B_reg|Data_Out[4] , B_reg|Data_Out[4], multiply, 1
instance = comp, \B_reg|Data_Next~3 , B_reg|Data_Next~3, multiply, 1
instance = comp, \B_reg|Data_Out[3] , B_reg|Data_Out[3], multiply, 1
instance = comp, \B_reg|Data_Next~2 , B_reg|Data_Next~2, multiply, 1
instance = comp, \B_reg|Data_Out[2]~feeder , B_reg|Data_Out[2]~feeder, multiply, 1
instance = comp, \B_reg|Data_Out[2] , B_reg|Data_Out[2], multiply, 1
instance = comp, \B_reg|Data_Next~1 , B_reg|Data_Next~1, multiply, 1
instance = comp, \B_reg|Data_Out[1]~feeder , B_reg|Data_Out[1]~feeder, multiply, 1
instance = comp, \B_reg|Data_Out[1] , B_reg|Data_Out[1], multiply, 1
instance = comp, \B_reg|Data_Next~0 , B_reg|Data_Next~0, multiply, 1
instance = comp, \B_reg|Data_Out[0] , B_reg|Data_Out[0], multiply, 1
instance = comp, \control_unit|Selector16~0 , control_unit|Selector16~0, multiply, 1
instance = comp, \control_unit|curr_state.Last_Shift , control_unit|curr_state.Last_Shift, multiply, 1
instance = comp, \control_unit|Selector17~0 , control_unit|Selector17~0, multiply, 1
instance = comp, \control_unit|curr_state.Halt , control_unit|curr_state.Halt, multiply, 1
instance = comp, \control_unit|curr_state~33 , control_unit|curr_state~33, multiply, 1
instance = comp, \control_unit|curr_state.Start , control_unit|curr_state.Start, multiply, 1
instance = comp, \control_unit|curr_state~25 , control_unit|curr_state~25, multiply, 1
instance = comp, \control_unit|curr_state.Add1 , control_unit|curr_state.Add1, multiply, 1
instance = comp, \control_unit|Selector9~0 , control_unit|Selector9~0, multiply, 1
instance = comp, \control_unit|curr_state.Shift1~feeder , control_unit|curr_state.Shift1~feeder, multiply, 1
instance = comp, \control_unit|curr_state.Shift1 , control_unit|curr_state.Shift1, multiply, 1
instance = comp, \control_unit|curr_state~26 , control_unit|curr_state~26, multiply, 1
instance = comp, \control_unit|curr_state.Add2 , control_unit|curr_state.Add2, multiply, 1
instance = comp, \control_unit|Selector10~0 , control_unit|Selector10~0, multiply, 1
instance = comp, \control_unit|curr_state.Shift2 , control_unit|curr_state.Shift2, multiply, 1
instance = comp, \control_unit|curr_state~27 , control_unit|curr_state~27, multiply, 1
instance = comp, \control_unit|curr_state.Add3 , control_unit|curr_state.Add3, multiply, 1
instance = comp, \control_unit|Selector11~0 , control_unit|Selector11~0, multiply, 1
instance = comp, \control_unit|curr_state.Shift3 , control_unit|curr_state.Shift3, multiply, 1
instance = comp, \control_unit|curr_state~28 , control_unit|curr_state~28, multiply, 1
instance = comp, \control_unit|curr_state.Add4 , control_unit|curr_state.Add4, multiply, 1
instance = comp, \control_unit|Selector12~0 , control_unit|Selector12~0, multiply, 1
instance = comp, \control_unit|curr_state.Shift4 , control_unit|curr_state.Shift4, multiply, 1
instance = comp, \control_unit|curr_state~29 , control_unit|curr_state~29, multiply, 1
instance = comp, \control_unit|curr_state.Add5 , control_unit|curr_state.Add5, multiply, 1
instance = comp, \control_unit|Selector13~0 , control_unit|Selector13~0, multiply, 1
instance = comp, \control_unit|curr_state.Shift5 , control_unit|curr_state.Shift5, multiply, 1
instance = comp, \control_unit|curr_state~30 , control_unit|curr_state~30, multiply, 1
instance = comp, \control_unit|curr_state.Add6 , control_unit|curr_state.Add6, multiply, 1
instance = comp, \control_unit|Selector14~0 , control_unit|Selector14~0, multiply, 1
instance = comp, \control_unit|curr_state.Shift6 , control_unit|curr_state.Shift6, multiply, 1
instance = comp, \control_unit|curr_state~31 , control_unit|curr_state~31, multiply, 1
instance = comp, \control_unit|curr_state.Add7 , control_unit|curr_state.Add7, multiply, 1
instance = comp, \control_unit|Selector15~0 , control_unit|Selector15~0, multiply, 1
instance = comp, \control_unit|curr_state.Shift7 , control_unit|curr_state.Shift7, multiply, 1
instance = comp, \control_unit|curr_state~32 , control_unit|curr_state~32, multiply, 1
instance = comp, \control_unit|curr_state.Sub , control_unit|curr_state.Sub, multiply, 1
instance = comp, \adder|sub|FA0|c~0 , adder|sub|FA0|c~0, multiply, 1
instance = comp, \adder|sub|FA1|s , adder|sub|FA1|s, multiply, 1
instance = comp, \comb~0 , comb~0, multiply, 1
instance = comp, \comb~1 , comb~1, multiply, 1
instance = comp, \comb~2 , comb~2, multiply, 1
instance = comp, \adder|sub|FA8|s~0 , adder|sub|FA8|s~0, multiply, 1
instance = comp, \X|Data_Next~0 , X|Data_Next~0, multiply, 1
instance = comp, \adder|sub|FA1|c~0 , adder|sub|FA1|c~0, multiply, 1
instance = comp, \adder|sub|FA2|c~0 , adder|sub|FA2|c~0, multiply, 1
instance = comp, \adder|sub|FA3|c~0 , adder|sub|FA3|c~0, multiply, 1
instance = comp, \adder|sub|FA4|c~0 , adder|sub|FA4|c~0, multiply, 1
instance = comp, \adder|sub|FA5|c~0 , adder|sub|FA5|c~0, multiply, 1
instance = comp, \adder|sub|FA6|c~0 , adder|sub|FA6|c~0, multiply, 1
instance = comp, \adder|sub|FA7|c~0 , adder|sub|FA7|c~0, multiply, 1
instance = comp, \X|Data_Next~1 , X|Data_Next~1, multiply, 1
instance = comp, \X|Data_Out , X|Data_Out, multiply, 1
instance = comp, \A_reg|Data_Next[7]~13 , A_reg|Data_Next[7]~13, multiply, 1
instance = comp, \A_reg|Data_Out[7]~0 , A_reg|Data_Out[7]~0, multiply, 1
instance = comp, \A_reg|Data_Out[7] , A_reg|Data_Out[7], multiply, 1
instance = comp, \adder|sub|FA6|s~0 , adder|sub|FA6|s~0, multiply, 1
instance = comp, \A_reg|Data_Next[6]~19 , A_reg|Data_Next[6]~19, multiply, 1
instance = comp, \A_reg|Data_Out[6] , A_reg|Data_Out[6], multiply, 1
instance = comp, \adder|sub|FA5|s~0 , adder|sub|FA5|s~0, multiply, 1
instance = comp, \A_reg|Data_Next[5]~18 , A_reg|Data_Next[5]~18, multiply, 1
instance = comp, \A_reg|Data_Out[5] , A_reg|Data_Out[5], multiply, 1
instance = comp, \adder|sub|FA4|s~0 , adder|sub|FA4|s~0, multiply, 1
instance = comp, \A_reg|Data_Next[4]~17 , A_reg|Data_Next[4]~17, multiply, 1
instance = comp, \A_reg|Data_Out[4] , A_reg|Data_Out[4], multiply, 1
instance = comp, \adder|sub|FA3|s~0 , adder|sub|FA3|s~0, multiply, 1
instance = comp, \A_reg|Data_Next[3]~16 , A_reg|Data_Next[3]~16, multiply, 1
instance = comp, \A_reg|Data_Out[3] , A_reg|Data_Out[3], multiply, 1
instance = comp, \adder|sub|FA2|s~0 , adder|sub|FA2|s~0, multiply, 1
instance = comp, \A_reg|Data_Next[2]~15 , A_reg|Data_Next[2]~15, multiply, 1
instance = comp, \A_reg|Data_Out[2] , A_reg|Data_Out[2], multiply, 1
instance = comp, \A_reg|Data_Next[1]~14 , A_reg|Data_Next[1]~14, multiply, 1
instance = comp, \A_reg|Data_Out[1] , A_reg|Data_Out[1], multiply, 1
instance = comp, \A_reg|Data_Next[0]~12 , A_reg|Data_Next[0]~12, multiply, 1
instance = comp, \A_reg|Data_Out[0] , A_reg|Data_Out[0], multiply, 1
instance = comp, \~QUARTUS_CREATED_UNVM~ , ~QUARTUS_CREATED_UNVM~, multiply, 1
instance = comp, \~QUARTUS_CREATED_ADC1~ , ~QUARTUS_CREATED_ADC1~, multiply, 1
instance = comp, \~QUARTUS_CREATED_ADC2~ , ~QUARTUS_CREATED_ADC2~, multiply, 1
design_name = hard_block
instance = comp, \~ALTERA_TMS~~ibuf , ~ALTERA_TMS~~ibuf, hard_block, 1
instance = comp, \~ALTERA_TCK~~ibuf , ~ALTERA_TCK~~ibuf, hard_block, 1
instance = comp, \~ALTERA_TDI~~ibuf , ~ALTERA_TDI~~ibuf, hard_block, 1
instance = comp, \~ALTERA_CONFIG_SEL~~ibuf , ~ALTERA_CONFIG_SEL~~ibuf, hard_block, 1
instance = comp, \~ALTERA_nCONFIG~~ibuf , ~ALTERA_nCONFIG~~ibuf, hard_block, 1
instance = comp, \~ALTERA_nSTATUS~~ibuf , ~ALTERA_nSTATUS~~ibuf, hard_block, 1
instance = comp, \~ALTERA_CONF_DONE~~ibuf , ~ALTERA_CONF_DONE~~ibuf, hard_block, 1
